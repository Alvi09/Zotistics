{"version":3,"sources":["Components/Search/departments.js","Components/Dog/doggles.png","Components/Dog/Dog.js","Components/NavBar/NavBar.js","Components/Data/Modal.js","Components/Data/ClassSideList.js","Components/Data/InstructorSideList.js","Components/Data/Data.js","Components/Search/SearchForm.js","Components/Search/FormTab.js","Components/Search/FormTabs.js","Components/Search/Search.js","Components/Info/Info.js","App.js","index.js","Components/Search/calculations.js"],"names":["module","exports","departments","name","value","Dog","nightMode","setNightMode","id","className","onClick","src","DogglesImg","alt","logo","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","NavBar","Navbar","expand","Container","Col","sm","href","Toggle","aria-controls","Collapse","Nav","Link","InfoModal","props","Modal","show","onHide","handleModalClose","size","Header","closeButton","Title","Body","Table","striped","hover","scope","data","map","cl","courseList","course","idx","c","course_offering","quarter","exact_year","department","number","title","instructors","shortened_name","section","code","average_gpa","ClassSideList","useState","x","classes","courses","setCourses","style","display","classDisplay","Card","maxHeight","sideInfoHeight","Dropdown","Menu","Item","e","preventDefault","result","JSON","parse","stringify","i","length","sort","a","b","count","aSplit","toLowerCase","split","bSplit","aNum","parseInt","pop","replace","bNum","aa","join","bb","Accordion","ToggleButtonGroup","type","ToggleButton","target","blur","onChange","dept","num","removed","Set","removedClasses","exclude","exludeCourses","checked","add","splice","exludeInstructors","has","push","delete","final","calculateData","queryParams","undefined","color","setData","setRemovedClasses","setExcludeCourses","modifyCourse","as","Button","variant","eventKey","fontSize","j","Text","year","instructor","InstructorSideList","setInstructors","instructorDisplay","fa","fb","inst","setExcludeInstructors","modifyInstructor","Data","Object","keys","reduce","instructorAmount","classAmount","setInstructorDisplay","setClassDisplay","setSideInfoHeight","chartSwitch","setChartSwitch","labels","setShow","excludeInstructors","excludeCourses","MAX_CLASSES","useEffect","percent","dataForGraph","setGraphDataPercent","setGraphDataPopulation","setChartData","datasets","dataset","colors","numGraphs","HSL","h","s","l","Array","getGraphColors","dataPopulation","f","p","np","sum","dataPercentage","toFixed","backgroundColor","label","graphDataPercent","graphDataPopulation","chartData","options","responsive","maintainAspectRatio","legend","animation","duration","tooltips","callbacks","tooltipItem","yLabel","scales","yAxes","ticks","beginAtZero","gridLines","scaleLabel","labelString","xAxes","updateChartOptions","init","resizeSideLists","window","addEventListener","document","getElementById","offsetHeight","toString","Row","cursor","userSelect","fontFamily","obj","averageGPA","FormCheck","dep","require","quarters","years","SearchForm","formID","handleFormValueChange","state","handleValueChange","SelectSearch","filterOptions","filter","fuzzySearch","q","slice","search","val","placeholder","closeOnSelect","printOptions","multiple","Form","Control","advancedVisible","aria-expanded","in","Check","excludePNP","evt","covid19","lowerDiv","upperDiv","FormTab","handleSetForm","handleCloseForm","showClose","isSelected","borderBottomColor","FormTabs","currentForm","forms","setCurrentForm","removeForm","addForm","md","m","calc","API_URL","INITIAL_INSTRUCTORS","Search","lastFormID","setLastFormID","results","setResults","setQueryParams","showFormTabs","setShowFormTabs","query","URLSearchParams","useLocation","EMPTY_STATE","get","classNumber","classCode","1","setForms","fetchInstructors","updateFormNumbers","formIDs","console","log","newFormID","newState","newForms","assign","reassignColors","formStates","fetch","body","method","mode","headers","then","res","json","grades","teacher","fetchDataFromForm","searchQuery","params","classList","grade_distributions","reverse","handleFormSubmit","Promise","all","getResultData","onSubmit","formState","noGutters","Group","Info","updateColors","App","root","setProperty","basename","process","path","ReactDOM","render","entries","key","instructorList","exactYear","yearSplit","quarterUpper","toUpperCase","quarterYear","addData","charAt","cumulativeData","original_data","option","stats","gpa","classObject","grade_a_count","grade_b_count","grade_c_count","grade_d_count","grade_f_count","grade_p_count","grade_np_count","agg","aggregate","sum_grade_a_count","sum_grade_b_count","sum_grade_c_count","sum_grade_d_count","sum_grade_f_count","sum_grade_p_count","sum_grade_np_count","co","originalData","displayTerm","parseFloat","args"],"mappings":"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","file":"static/js/main.d7da1a8e.chunk.js","sourcesContent":["\r\nconst departments = [\r\n    { name: \"Include All Departments\", value: \"ALL\" },\r\n    { name: \"AC ENG . . . . . .Academic English\", value: \"AC ENG\" },\r\n    { name: \"AFAM . . . . . . . African American Studies\", value: \"AFAM\" },\r\n    { name: \"ANATOMY . . . .Anatomy and Neurobiology\", value: \"ANATOMY\" },\r\n    { name: \"ANESTH . . . . . Anesthesiology\", value: \"ANESTH\" },\r\n    { name: \"ANTHRO . . . . . Anthropology\", value: \"ANTHRO\" },\r\n    { name: \"ARABIC . . . . . .Arabic\", value: \"ARABIC\" },\r\n    { name: \"ARMN . . . . . . .Armenian (started 2018 Spg)\", value: \"ARMN\" },\r\n    { name: \"ART . . . . . . . . .Art\", value: \"ART\" },\r\n    { name: \"ART HIS . . . . . .Art History\", value: \"ART HIS\" },\r\n    { name: \"ARTS . . . . . . . Arts\", value: \"ARTS\" },\r\n    { name: \"ARTSHUM . . . . Arts and Humanities\", value: \"ARTSHUM\" },\r\n    { name: \"ASIANAM . . . . Asian American Studies\", value: \"ASIANAM\" },\r\n    { name: \"BANA . . . . . . . Business Analytics (started 2017 SS2)\", value: \"BANA\" },\r\n    { name: \"BATS . . . . . . . Biomedical and Translational Science\", value: \"BATS\" },\r\n    { name: \"BIO SCI . . . . . .Biological Sciences\", value: \"BIO SCI\" },\r\n    { name: \"BIOCHEM . . . . Biological Chemistry\", value: \"BIOCHEM\" },\r\n    { name: \"BME . . . . . . . . Biomedical Engineering\", value: \"BME\" },\r\n    { name: \"BSEMD . . . . . .Bio Sci & Educational Media Design (until 2017 Wtr)\", value: \"BSEMD\" },\r\n    { name: \"CAMPREC . . . .Campus Recreation\", value: \"CAMPREC\" },\r\n    { name: \"CBE . . . . . . . . Chemical and Biomolecular Engineering (started 2018 Fall)\", value: \"CBE\" },\r\n    { name: \"CBEMS . . . . . .Chemical Engr and Materials Science (until 2019 SS2)\", value: \"CBEMS\" },\r\n    { name: \"CEM . . . . . . . . Community and Environmental Medicine\", value: \"CEM\" },\r\n    { name: \"CHC/LAT . . . . . Chicano Latino\", value: \"CHC/LAT\" },\r\n    { name: \"CHEM . . . . . . .Chemistry\", value: \"CHEM\" },\r\n    { name: \"CHINESE . . . . .Chinese\", value: \"CHINESE\" },\r\n    { name: \"CLASSIC . . . . .Classics\", value: \"CLASSIC\" },\r\n    { name: \"CLT&THY . . . . .Culture & Theory\", value: \"CLT&THY\" },\r\n    { name: \"COGS . . . . . . . Cognitive Sciences  (started 2016 Fall)\", value: \"COGS\" },\r\n    { name: \"COM LIT . . . . . Comparative Literature\", value: \"COM LIT\" },\r\n    { name: \"COMPSCI . . . . Computer Science\", value: \"COMPSCI\" },\r\n    { name: \"CRITISM . . . . . Criticism\", value: \"CRITISM\" },\r\n    { name: \"CRM/LAW . . . . Criminology, Law and Society\", value: \"CRM/LAW\" },\r\n    { name: \"CSE . . . . . . . . Computer Science and Engineering\", value: \"CSE\" },\r\n    { name: \"DANCE . . . . . . Dance\", value: \"DANCE\" },\r\n    { name: \"DERM . . . . . . .Dermatology\", value: \"DERM\" },\r\n    { name: \"DEV BIO . . . . . Developmental and Cell Biology\", value: \"DEV BIO\" },\r\n    { name: \"DRAMA . . . . . .Drama\", value: \"DRAMA\" },\r\n    { name: \"E ASIAN . . . . . East Asian Languages and Literatures (until 2019 SS2)\", value: \"E ASIAN\" },\r\n    { name: \"EARTHSS . . . . Earth System Science\", value: \"EARTHSS\" },\r\n    { name: \"EAS . . . . . . . . East Asian Studies (started 2019 Fall)\", value: \"EAS\" },\r\n    { name: \"ECO EVO . . . . Ecology and Evolutionary Biology\", value: \"ECO EVO\" },\r\n    { name: \"ECON . . . . . . . Economics\", value: \"ECON\" },\r\n    { name: \"ECPS . . . . . . . Embedded and Cyber-Physical Systems\", value: \"ECPS\" },\r\n    { name: \"ED AFF . . . . . .Educational Affairs (Sch of Med)\", value: \"ED AFF\" },\r\n    { name: \"EDUC . . . . . . . Education\", value: \"EDUC\" },\r\n    { name: \"EECS . . . . . . . Electrical Engineering & Computer Science\", value: \"EECS\" },\r\n    { name: \"EHS . . . . . . . . Environmental Health Sciences\", value: \"EHS\" },\r\n    { name: \"ENGLISH . . . . .English\", value: \"ENGLISH\" },\r\n    { name: \"ENGR . . . . . . . Engineering\", value: \"ENGR\" },\r\n    { name: \"ENGRCEE . . . .Engineering, Civil and Environmental\", value: \"ENGRCEE\" },\r\n    { name: \"ENGRMAE . . . .Engineering, Mechanical and Aerospace\", value: \"ENGRMAE\" },\r\n    { name: \"ENGRMSE . . . .Materials Science and Engineering (until 2020 SS2)\", value: \"ENGRMSE\" },\r\n    { name: \"EPIDEM . . . . . .Epidemiology\", value: \"EPIDEM\" },\r\n    { name: \"ER MED . . . . . Emergency Medicine\", value: \"ER MED\" },\r\n    { name: \"EURO ST . . . . .European Studies\", value: \"EURO ST\" },\r\n    { name: \"FAM MED . . . . Family Medicine\", value: \"FAM MED\" },\r\n    { name: \"FIN . . . . . . . . . Finance (started 2017 Fall)\", value: \"FIN\" },\r\n    { name: \"FLM&MDA . . . .Film and Media Studies\", value: \"FLM&MDA\" },\r\n    { name: \"FRENCH . . . . . French\", value: \"FRENCH\" },\r\n    { name: \"GEN&SEX . . . . Gender and Sexuality Studies\", value: \"GEN&SEX\" },\r\n    { name: \"GERMAN . . . . .German\", value: \"GERMAN\" },\r\n    { name: \"GLBL ME . . . . .Global Middle East Studies (started 2016 Fall)\", value: \"GLBL ME\" },\r\n    { name: \"GLBLCLT . . . . .Global Cultures\", value: \"GLBLCLT\" },\r\n    { name: \"GREEK . . . . . . Greek\", value: \"GREEK\" },\r\n    { name: \"HEBREW . . . . .Hebrew\", value: \"HEBREW\" },\r\n    { name: \"HINDI . . . . . . . .Hindi\", value: \"HINDI\" },\r\n    { name: \"HISTORY . . . . .History\", value: \"HISTORY\" },\r\n    { name: \"HUMAN . . . . . .Humanities\", value: \"HUMAN\" },\r\n    { name: \"HUMARTS . . . . Humanities and Arts\", value: \"HUMARTS\" },\r\n    { name: \"I&C SCI . . . . . . Information and Computer Science\", value: \"I&C SCI\" },\r\n    { name: \"IN4MATX . . . . . Informatics\", value: \"IN4MATX\" },\r\n    { name: \"INNO . . . . . . . .Masters of Innovation and Entrepreneurship (started 2019 Fall)\", value: \"INNO\" },\r\n    { name: \"INT MED . . . . . Internal Medicine\", value: \"INT MED\" },\r\n    { name: \"INTL ST . . . . . . International Studies\", value: \"INTL ST\" },\r\n    { name: \"IRAN . . . . . . . .Iranian (started 2020 Fall)\", value: \"IRAN\" },\r\n    { name: \"ITALIAN . . . . . .Italian\", value: \"ITALIAN\" },\r\n    { name: \"JAPANSE . . . . Japanese\", value: \"JAPANSE\" },\r\n    { name: \"KOREAN . . . . .Korean\", value: \"KOREAN\" },\r\n    { name: \"LATIN . . . . . . . Latin\", value: \"LATIN\" },\r\n    { name: \"LAW . . . . . . . . Law\", value: \"LAW\" },\r\n    { name: \"LINGUIS . . . . . .Linguistics (until 2019 SS2)\", value: \"LINGUIS\" },\r\n    { name: \"LIT JRN . . . . . . Literary Journalism\", value: \"LIT JRN\" },\r\n    { name: \"LPS . . . . . . . . .Logic and Philosophy of Science\", value: \"LPS\" },\r\n    { name: \"LSCI . . . . . . . . Language Science (started 2019 Fall)\", value: \"LSCI\" },\r\n    { name: \"M&MG . . . . . . .Microbiology and Molecular Genetics\", value: \"M&MG\" },\r\n    { name: \"MATH . . . . . . . Mathematics\", value: \"MATH\" },\r\n    { name: \"MED . . . . . . . . Medicine\", value: \"MED\" },\r\n    { name: \"MED ED . . . . . Medical Education\", value: \"MED ED\" },\r\n    { name: \"MED HUM . . . . Medical Humanities (started 2016 Fall)\", value: \"MED HUM\" },\r\n    { name: \"MGMT . . . . . . .Management\", value: \"MGMT\" },\r\n    { name: \"MGMT EP . . . . Executive MBA\", value: \"MGMT EP\" },\r\n    { name: \"MGMT FE . . . . Fully Employed MBA\", value: \"MGMT FE\" },\r\n    { name: \"MGMT HC . . . . Health Care MBA\", value: \"MGMT HC\" },\r\n    { name: \"MGMTMBA . . . Management MBA\", value: \"MGMTMBA\" },\r\n    { name: \"MGMTPHD . . . .Management PhD\", value: \"MGMTPHD\" },\r\n    { name: \"MIC BIO . . . . . .Microbiology\", value: \"MIC BIO\" },\r\n    { name: \"MOL BIO . . . . . Molecular Biology and Biochemistry\", value: \"MOL BIO\" },\r\n    { name: \"MPAC . . . . . . .Accounting\", value: \"MPAC\" },\r\n    { name: \"MSE . . . . . . . . Materials Science and Engineering (started 2020 Fall)\", value: \"MSE\" },\r\n    { name: \"MUSIC . . . . . . .Music\", value: \"MUSIC\" },\r\n    { name: \"NET SYS . . . . .Networked Systems\", value: \"NET SYS\" },\r\n    { name: \"NEURBIO . . . . .Neurobiology and Behavior\", value: \"NEURBIO\" },\r\n    { name: \"NEUROL . . . . . Neurology\", value: \"NEUROL\" },\r\n    { name: \"NUR SCI . . . . . Nursing Science\", value: \"NUR SCI\" },\r\n    { name: \"OB/GYN . . . . . Obstetrics and Gynecology\", value: \"OB/GYN\" },\r\n    { name: \"OPHTHAL . . . . Ophthalmology\", value: \"OPHTHAL\" },\r\n    { name: \"PATH . . . . . . . Pathology and Laboratory Medicine\", value: \"PATH\" },\r\n    { name: \"PED GEN . . . . Pediatrics Genetics\", value: \"PED GEN\" },\r\n    { name: \"PEDS . . . . . . . Pediatrics\", value: \"PEDS\" },\r\n    { name: \"PERSIAN . . . . .Persian\", value: \"PERSIAN\" },\r\n    { name: \"PHARM . . . . . .Medical Pharmacology\", value: \"PHARM\" },\r\n    { name: \"PHILOS . . . . . .Philosophy\", value: \"PHILOS\" },\r\n    { name: \"PHRMSCI . . . . Pharmaceutical Sciences\", value: \"PHRMSCI\" },\r\n    { name: \"PHY SCI . . . . . Physical Science\", value: \"PHY SCI\" },\r\n    { name: \"PHYSICS . . . . .Physics\", value: \"PHYSICS\" },\r\n    { name: \"PHYSIO . . . . . .Physiology and Biophysics\", value: \"PHYSIO\" },\r\n    { name: \"PLASTIC . . . . . Plastic Surgery\", value: \"PLASTIC\" },\r\n    { name: \"PM&R . . . . . . .Physical Medicine and Rehabilitation\", value: \"PM&R\" },\r\n    { name: \"POL SCI . . . . . Political Science\", value: \"POL SCI\" },\r\n    { name: \"PORTUG . . . . . Portuguese\", value: \"PORTUG\" },\r\n    { name: \"PP&D . . . . . . . Planning, Policy, and Design (until 2018 SS2; see UPPP)\", value: \"PP&D\" },\r\n    { name: \"PSCI . . . . . . . .Psychological Science (started 2019 Fall)\", value: \"PSCI\" },\r\n    { name: \"PSY BEH . . . . .Psychology and Social Behavior (until 2019 SS2)\", value: \"PSY BEH\" },\r\n    { name: \"PSYCH . . . . . . Psychology\", value: \"PSYCH\" },\r\n    { name: \"PUB POL . . . . .Public Policy\", value: \"PUB POL\" },\r\n    { name: \"PUBHLTH . . . . Public Health\", value: \"PUBHLTH\" },\r\n    { name: \"RADIO . . . . . . .Radiology\", value: \"RADIO\" },\r\n    { name: \"REL STD . . . . . Religious Studies\", value: \"REL STD\" },\r\n    { name: \"ROTC . . . . . . . Reserve Officers' Training Corps\", value: \"ROTC\" },\r\n    { name: \"RUSSIAN . . . . .Russian\", value: \"RUSSIAN\" },\r\n    { name: \"SOC SCI . . . . . Social Science\", value: \"SOC SCI\" },\r\n    { name: \"SOCECOL . . . . Social Ecology\", value: \"SOCECOL\" },\r\n    { name: \"SOCIOL . . . . . .Sociology\", value: \"SOCIOL\" },\r\n    { name: \"SPANISH . . . . .Spanish\", value: \"SPANISH\" },\r\n    { name: \"SPPS . . . . . . . Social Policy & Public Service (started 2016 Wtr)\", value: \"SPPS\" },\r\n    { name: \"STATS . . . . . . .Statistics\", value: \"STATS\" },\r\n    { name: \"SURGERY . . . .Surgery\", value: \"SURGERY\" },\r\n    { name: \"SWE . . . . . . . .Software Engineering (started 2019 Fall)\", value: \"SWE\" },\r\n    { name: \"TAGALOG . . . . Tagalog\", value: \"TAGALOG\" },\r\n    { name: \"TOX . . . . . . . . .Toxicology\", value: \"TOX\" },\r\n    { name: \"UCDC . . . . . . . UC Washington DC\", value: \"UCDC\" },\r\n    { name: \"UNI AFF . . . . . .University Affairs\", value: \"UNI AFF\" },\r\n    { name: \"UNI STU . . . . . .University Studies\", value: \"UNI STU\" },\r\n    { name: \"UPPP . . . . . . . Urban Planning and Public Policy (started 2018 Fall)\", value: \"UPPP\" },\r\n    { name: \"VIETMSE . . . . .Vietnamese\", value: \"VIETMSE\" },\r\n    { name: \"VIS STD . . . . . .Visual Studies\", value: \"VIS STD\" },\r\n    { name: \"WRITING . . . . . Writing\", value: \"WRITING\" }\r\n];\r\n\r\nmodule.exports.departments = departments;","export default __webpack_public_path__ + \"static/media/doggles.414585ca.png\";","\r\nimport React from 'react';\r\nimport './dog.css'\r\nimport DogglesImg from './doggles.png'\r\n\r\n\r\n\r\n\r\nexport default function Dog({nightMode, setNightMode}){\r\n    return (\r\n        <div id = \"dog\">\r\n            <img className = \"\" onClick={()=>setNightMode(!nightMode)} src={DogglesImg} alt=\"Logo\" />\r\n        </div>\r\n    );\r\n    \r\n}\r\n","import React from 'react';\r\nimport './NavBar.css'\r\nimport {Navbar, Nav, Container, Col} from 'react-bootstrap';\r\n\r\nconst logo = <svg width=\"250\" height=\"52\" viewBox=\"0 0 368 101\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M108.4 59.944C108.4 63.5813 107.872 66.896 106.816 69.888C105.76 72.88 104.264 75.432 102.328 77.544C100.392 79.656 98.0453 81.2987 95.288 82.472C92.5893 83.6453 89.5973 84.232 86.312 84.232C83.0267 84.232 80.0347 83.6453 77.336 82.472C74.6373 81.2987 72.32 79.656 70.384 77.544C68.448 75.432 66.9227 72.88 65.808 69.888C64.752 66.896 64.224 63.5813 64.224 59.944C64.224 56.3067 64.752 53.0213 65.808 50.088C66.9227 47.096 68.448 44.544 70.384 42.432C72.3787 40.32 74.7253 38.7067 77.424 37.592C80.1227 36.4187 83.0853 35.832 86.312 35.832C89.5387 35.832 92.5013 36.4187 95.2 37.592C97.9573 38.7067 100.304 40.32 102.24 42.432C104.176 44.544 105.672 47.096 106.728 50.088C107.843 53.0213 108.4 56.3067 108.4 59.944ZM97.488 59.944C97.488 55.368 96.4907 51.76 94.496 49.12C92.56 46.4213 89.832 45.072 86.312 45.072C82.792 45.072 80.0347 46.4213 78.04 49.12C76.104 51.76 75.136 55.368 75.136 59.944C75.136 64.5787 76.104 68.2453 78.04 70.944C80.0347 73.6427 82.792 74.992 86.312 74.992C89.832 74.992 92.56 73.6427 94.496 70.944C96.4907 68.2453 97.488 64.5787 97.488 59.944ZM118.842 24.832L129.49 23.072V36.976H145.858V45.864H129.49V64.608C129.49 68.304 130.076 70.944 131.25 72.528C132.423 74.112 134.418 74.904 137.234 74.904C139.17 74.904 140.871 74.6987 142.338 74.288C143.863 73.8773 145.066 73.496 145.946 73.144L147.706 81.592C146.474 82.12 144.86 82.648 142.866 83.176C140.871 83.7627 138.524 84.056 135.826 84.056C132.54 84.056 129.783 83.616 127.554 82.736C125.383 81.856 123.652 80.5947 122.362 78.952C121.071 77.2507 120.162 75.2267 119.634 72.88C119.106 70.4747 118.842 67.7467 118.842 64.696V24.832ZM166.887 83H156.239V36.976H166.887V83ZM168.031 23.512C168.031 25.5067 167.386 27.0907 166.095 28.264C164.804 29.4373 163.279 30.024 161.519 30.024C159.7 30.024 158.146 29.4373 156.855 28.264C155.564 27.0907 154.919 25.5067 154.919 23.512C154.919 21.4587 155.564 19.8453 156.855 18.672C158.146 17.4987 159.7 16.912 161.519 16.912C163.279 16.912 164.804 17.4987 166.095 18.672C167.386 19.8453 168.031 21.4587 168.031 23.512ZM191.999 75.344C194.815 75.344 196.869 75.0213 198.159 74.376C199.45 73.672 200.095 72.4987 200.095 70.856C200.095 69.3307 199.391 68.0693 197.983 67.072C196.634 66.0747 194.375 64.9893 191.207 63.816C189.271 63.112 187.482 62.3787 185.839 61.616C184.255 60.7947 182.877 59.856 181.703 58.8C180.53 57.744 179.591 56.4827 178.887 55.016C178.242 53.4907 177.919 51.6427 177.919 49.472C177.919 45.248 179.474 41.9333 182.583 39.528C185.693 37.064 189.917 35.832 195.255 35.832C197.954 35.832 200.535 36.096 202.999 36.624C205.463 37.0933 207.311 37.5627 208.543 38.032L206.607 46.656C205.434 46.128 203.938 45.6587 202.119 45.248C200.301 44.7787 198.189 44.544 195.783 44.544C193.613 44.544 191.853 44.9253 190.503 45.688C189.154 46.392 188.479 47.5067 188.479 49.032C188.479 49.7947 188.597 50.4693 188.831 51.056C189.125 51.6427 189.594 52.2 190.239 52.728C190.885 53.1973 191.735 53.696 192.791 54.224C193.847 54.6933 195.138 55.192 196.663 55.72C199.186 56.6587 201.327 57.5973 203.087 58.536C204.847 59.416 206.285 60.4427 207.399 61.616C208.573 62.7307 209.423 64.0213 209.951 65.488C210.479 66.9547 210.743 68.7147 210.743 70.768C210.743 75.168 209.101 78.512 205.815 80.8C202.589 83.0293 197.954 84.144 191.911 84.144C187.863 84.144 184.607 83.792 182.143 83.088C179.679 82.4427 177.949 81.9147 176.951 81.504L178.799 72.616C180.383 73.2613 182.261 73.8773 184.431 74.464C186.661 75.0507 189.183 75.344 191.999 75.344ZM220.162 24.832L230.81 23.072V36.976H247.178V45.864H230.81V64.608C230.81 68.304 231.397 70.944 232.57 72.528C233.743 74.112 235.738 74.904 238.554 74.904C240.49 74.904 242.191 74.6987 243.658 74.288C245.183 73.8773 246.386 73.496 247.266 73.144L249.026 81.592C247.794 82.12 246.181 82.648 244.186 83.176C242.191 83.7627 239.845 84.056 237.146 84.056C233.861 84.056 231.103 83.616 228.874 82.736C226.703 81.856 224.973 80.5947 223.682 78.952C222.391 77.2507 221.482 75.2267 220.954 72.88C220.426 70.4747 220.162 67.7467 220.162 64.696V24.832ZM268.207 83H257.559V36.976H268.207V83ZM269.351 23.512C269.351 25.5067 268.706 27.0907 267.415 28.264C266.125 29.4373 264.599 30.024 262.839 30.024C261.021 30.024 259.466 29.4373 258.175 28.264C256.885 27.0907 256.239 25.5067 256.239 23.512C256.239 21.4587 256.885 19.8453 258.175 18.672C259.466 17.4987 261.021 16.912 262.839 16.912C264.599 16.912 266.125 17.4987 267.415 18.672C268.706 19.8453 269.351 21.4587 269.351 23.512ZM279.24 60.032C279.24 56.6293 279.768 53.4613 280.824 50.528C281.88 47.536 283.376 44.9547 285.312 42.784C287.306 40.6133 289.712 38.912 292.528 37.68C295.344 36.448 298.512 35.832 302.032 35.832C306.373 35.832 310.48 36.624 314.352 38.208L312.064 46.92C310.832 46.392 309.424 45.952 307.84 45.6C306.314 45.248 304.672 45.072 302.912 45.072C298.746 45.072 295.578 46.392 293.408 49.032C291.237 51.6133 290.152 55.28 290.152 60.032C290.152 64.608 291.178 68.2453 293.232 70.944C295.285 73.584 298.746 74.904 303.616 74.904C305.434 74.904 307.224 74.728 308.984 74.376C310.744 74.024 312.269 73.584 313.56 73.056L315.056 81.856C313.882 82.4427 312.093 82.9707 309.688 83.44C307.341 83.9093 304.906 84.144 302.384 84.144C298.453 84.144 295.021 83.5573 292.088 82.384C289.213 81.152 286.808 79.48 284.872 77.368C282.994 75.1973 281.586 72.6453 280.648 69.712C279.709 66.72 279.24 63.4933 279.24 60.032ZM334.827 75.344C337.643 75.344 339.697 75.0213 340.987 74.376C342.278 73.672 342.923 72.4987 342.923 70.856C342.923 69.3307 342.219 68.0693 340.811 67.072C339.462 66.0747 337.203 64.9893 334.035 63.816C332.099 63.112 330.31 62.3787 328.667 61.616C327.083 60.7947 325.705 59.856 324.531 58.8C323.358 57.744 322.419 56.4827 321.715 55.016C321.07 53.4907 320.747 51.6427 320.747 49.472C320.747 45.248 322.302 41.9333 325.411 39.528C328.521 37.064 332.745 35.832 338.083 35.832C340.782 35.832 343.363 36.096 345.827 36.624C348.291 37.0933 350.139 37.5627 351.371 38.032L349.435 46.656C348.262 46.128 346.766 45.6587 344.947 45.248C343.129 44.7787 341.017 44.544 338.611 44.544C336.441 44.544 334.681 44.9253 333.331 45.688C331.982 46.392 331.307 47.5067 331.307 49.032C331.307 49.7947 331.425 50.4693 331.659 51.056C331.953 51.6427 332.422 52.2 333.067 52.728C333.713 53.1973 334.563 53.696 335.619 54.224C336.675 54.6933 337.966 55.192 339.491 55.72C342.014 56.6587 344.155 57.5973 345.915 58.536C347.675 59.416 349.113 60.4427 350.227 61.616C351.401 62.7307 352.251 64.0213 352.779 65.488C353.307 66.9547 353.571 68.7147 353.571 70.768C353.571 75.168 351.929 78.512 348.643 80.8C345.417 83.0293 340.782 84.144 334.739 84.144C330.691 84.144 327.435 83.792 324.971 83.088C322.507 82.4427 320.777 81.9147 319.779 81.504L321.627 72.616C323.211 73.2613 325.089 73.8773 327.259 74.464C329.489 75.0507 332.011 75.344 334.827 75.344Z\" fill=\"white\"/>\r\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.71646 15L0.194258 21.3493L5.88257 26.1998L13.8595 15H4.71646ZM19.4288 15L8.64899 30.1351L14.3373 34.9856L28.5719 15H19.4288ZM34.0645 15L25.4837 27.0477L31.172 31.8982L43.2076 15H34.0645ZM0 83.1422L48.5364 15H60.292L11.7556 83.1422H0ZM55.739 83.1422L59.901 77.2987L54.2127 72.4481L46.596 83.1422H55.739ZM41.048 83.1422L51.4855 68.4876L45.7972 63.6371L31.9049 83.1422H41.048ZM26.4819 83.1422L33.1381 73.7967L27.4498 68.9462L17.3388 83.1422H26.4819Z\" fill=\"white\"/>\r\n</svg>;\r\n\r\n\r\nexport default function NavBar() {\r\n    return (\r\n        <Navbar id=\"navbar\" className=\"py-0 mb-2\" expand=\"sm\">\r\n            <Container className=\"justify-content-center\">\r\n                <Col sm={4} />\r\n                <Col sm={3} className=\"text-center py-1\">\r\n                    <a href=\"/\" className=\"\">{logo}</a>\r\n                </Col>\r\n                <Col sm={4} className=\"pr-1\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Nav.Link href=\"/info\" className=\"tabLinks\">Info</Nav.Link>\r\n                            <Nav.Link href=\"https://forms.gle/eoWtS26Ys8ra4cjK8\" className=\"tabLinks\">Feedback</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Col>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}","import React from 'react';\r\nimport { Modal, Table } from \"react-bootstrap\";\r\n\r\nexport default function InfoModal(props) {\r\n\r\n    return (\r\n        <Modal\r\n            show={props.show}\r\n            onHide={props.handleModalClose}\r\n            size=\"xl\"\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Search Result</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Term</th>\r\n                        <th scope=\"col\">Dept</th>\r\n                        <th scope=\"col\">Number</th>\r\n                        <th scope=\"col\">Title</th>\r\n                        <th scope=\"col\">Instructor</th>\r\n                        <th scope=\"col\">Code</th>\r\n                        <th scope=\"col\">GPA</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.data.map(cl => {\r\n                            return (\r\n                                cl.courseList.map((course, idx) => {\r\n                                    let c = course.course_offering\r\n                                    return (\r\n                                        <tr key={idx}>\r\n                                            <td>{c.quarter} {c.exact_year}</td>\r\n                                            <td>{c.course.department}</td>\r\n                                            <td>{c.course.number}</td>\r\n                                            <td>{c.course.title}</td>\r\n                                            <td>{c.instructors[0].name ? c.instructors[0].name : c.instructors[0].shortened_name}</td>\r\n                                            <td>{c.section.code}</td>\r\n                                            <td>{course.average_gpa}</td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {CaretDownFill} from 'react-bootstrap-icons'\r\nimport {Accordion, Button, Card, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport {calculateData} from \"../Search/calculations\";\r\nimport './Data.css'\r\n\r\nexport default function ClassSideList(props){\r\n    const [courses , setCourses] = useState(props.data.map(x => x.classes)); // condensed data\r\n\r\n    // useEffect(() => {\r\n    //     setCourses(props.data.map(x => x.classes))\r\n    // }, [props.data])\r\n\r\n    const handleSortAmount = (e) => {\r\n        e.preventDefault();\r\n        let result = JSON.parse(JSON.stringify(courses)); // deep copy\r\n\r\n        for(let i = 0; i < courses.length; i++){\r\n            result[i].sort((a, b) => b.count - a.count); // sorts descending\r\n        }\r\n\r\n        setCourses(result);\r\n    }\r\n\r\n    const handleSortName = (e) => {\r\n        e.preventDefault();\r\n        let result = JSON.parse(JSON.stringify(courses)); // deep copy\r\n\r\n        for(let i = 0; i < courses.length; i++){\r\n            result[i].sort((a, b) => {\r\n                // tokenizes string (dept_code course_num)\r\n                let aSplit = a.name.toLowerCase().split(' ')\r\n                let bSplit = b.name.toLowerCase().split(' ')\r\n\r\n                // remove alphabetic characters from class number and removed from previous array\r\n                let aNum = parseInt(aSplit.pop().replace(/\\D/g, ''));\r\n                let bNum = parseInt(bSplit.pop().replace(/\\D/g, ''));\r\n\r\n                // turns the array into a string excluding the course number\r\n                let aa = aSplit.join(' ');\r\n                let bb = bSplit.join(' ')\r\n\r\n                // compares department code\r\n                // sorts ascending\r\n                if (aa < bb) { return -1; }\r\n                if (aa > bb) { return 1; }\r\n\r\n                // if both dept codes are the same, it compares the course number\r\n                return aNum - bNum; // sorts ascending\r\n            });\r\n        }\r\n\r\n        setCourses(result);\r\n    }\r\n\r\n    const modifyCourse = (e, idx, dept, num) => {\r\n        e.preventDefault();\r\n        let result = JSON.parse(JSON.stringify(props.data));\r\n        let cl = result[idx].courseList;\r\n        let removed = new Set(props.removedClasses);\r\n        let exclude = new Set(props.exludeCourses)\r\n\r\n        if(e.target.checked){ // removes courses with the specified dept and num\r\n            for(let i = cl.length - 1; i >= 0; i--){\r\n                if(cl[i].course_offering.course.department === dept && cl[i].course_offering.course.number === num){\r\n                    removed.add(cl[i])\r\n                    exclude.add(`${dept} ${num}`)\r\n                    cl.splice(i, 1);\r\n                }\r\n            }\r\n        } else { // adds back the courses with the specified dept and num\r\n            for(let course of props.removedClasses){\r\n                if(course.course_offering.course.department === dept && course.course_offering.course.number === num &&\r\n                    !props.exludeInstructors.has(course.course_offering.instructors[0].shortened_name)) { // does not add back course with an instructor still excluded\r\n                    cl.push(course)\r\n                    removed.delete(course)\r\n                    exclude.delete(`${dept} ${num}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        let final = calculateData(cl, props.queryParams, undefined, false)\r\n        final.color = result[idx].color\r\n        result[idx] = final\r\n        props.setData(result);\r\n        props.setRemovedClasses(removed)\r\n        props.setExcludeCourses(exclude)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: props.classDisplay }}>\r\n            <Card className=\"overflow-auto shadow-sm\" style={{ maxHeight: props.sideInfoHeight }}>\r\n                <Dropdown className=\"text-right\">\r\n                    <Dropdown.Toggle size=\"sm\" className=\"sidelist-sort-btn\">\r\n                        Sort\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item value=\"amount\" onClick={handleSortAmount}>Amount</Dropdown.Item>\r\n                        <Dropdown.Item value=\"name\" onClick={handleSortName}>Name</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Card.Body className=\"px-0 pt-1\">\r\n                    <h5 className=\"card-title mb-0\">Classes</h5>\r\n                    {courses.map((x, idx) => (\r\n                        <div key={idx}>\r\n                        {x.map(c => (\r\n                            <Accordion key={`${c.name}${idx}`} className=\"mb-1\">\r\n                                <ToggleButtonGroup type=\"checkbox\" className=\"\">\r\n                                    <ToggleButton className=\"sidelist-item px-1\" id=\"tbg-check-2\" value={1} onClick={e => e.target.blur()} onChange={e => modifyCourse(e, idx, c.department, c.number)}>\r\n                                        {c.name} • {c.count}\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n\r\n                                <Accordion.Toggle className=\"card-text text-decoration-none shadow-none sidelist-item px-1\" as={Button}\r\n                                                  variant=\"link\" eventKey=\"0\">\r\n                                    <CaretDownFill fontSize=\"0.65rem\"/>\r\n                                </Accordion.Toggle>\r\n\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                    <div>\r\n                                        {c.courses.map((j, idx) => (\r\n                                                <Card.Text key={idx} style={{fontSize: '0.69rem'}}>{j.year} {j.quarter} - {j.instructor}</Card.Text>\r\n                                            )\r\n                                        )}\r\n                                    </div>\r\n                                </Accordion.Collapse>\r\n                            </Accordion>\r\n                        ))}\r\n                        {idx < courses.length - 1 &&\r\n                        <p className=\"p-0 m-0\">-----</p>\r\n                        }\r\n                        </div>\r\n                    ))}\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {Card, Dropdown, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport {calculateData} from \"../Search/calculations\";\r\nimport './Data.css'\r\n\r\nexport default function InstructorSideList(props) {\r\n    const [instructors , setInstructors] = useState(props.data.map(x => x.instructors)); // condensed data\r\n\r\n    const handleSortAmount = (e) => {\r\n        e.preventDefault();\r\n        let result = JSON.parse(JSON.stringify(instructors)); // deep copy\r\n\r\n        for(let i = 0; i < instructors.length; i++){\r\n            result[i].sort((a, b) => b.count - a.count); // sorts descending\r\n        }\r\n\r\n        setInstructors(result);\r\n    }\r\n\r\n    const handleSortName = (e) => {\r\n        e.preventDefault();\r\n        let result = JSON.parse(JSON.stringify(instructors)); // deep copy\r\n\r\n        for(let i = 0; i < instructors.length; i++){\r\n            result[i].sort((a, b) => {\r\n                let fa = a.name.toLowerCase()\r\n                let fb = b.name.toLowerCase();\r\n\r\n                // sorts ascending\r\n                if (fa < fb) { return -1; }\r\n                if (fa > fb) { return 1; }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        setInstructors(result);\r\n    }\r\n\r\n    const modifyInstructor = (e, idx, inst) => {\r\n        e.preventDefault();\r\n        let result = JSON.parse(JSON.stringify(props.data));\r\n        let cl = result[idx].courseList;\r\n        let removed = new Set(props.removedClasses);\r\n        let exclude = new Set(props.exludeInstructors)\r\n\r\n        if(e.target.checked){ // removes courses with the specified instructor\r\n            for(let i = cl.length - 1; i >= 0; i--){\r\n                if(cl[i].course_offering.instructors[0].shortened_name === inst){\r\n                    removed.add(cl[i])\r\n                    exclude.add(inst)\r\n                    cl.splice(i, 1);\r\n                }\r\n            }\r\n        } else { // adds back the courses with the specified instructor\r\n            for(let course of props.removedClasses){\r\n                let name = `${course.course_offering.course.department} ${course.course_offering.course.number}`\r\n                if(course.course_offering.instructors[0].shortened_name === inst && !props.exludeCourses.has(name)) {\r\n                    cl.push(course)\r\n                    removed.delete(course)\r\n                    exclude.delete(inst)\r\n                }\r\n            }\r\n        }\r\n\r\n        let final = calculateData(cl, props.queryParams, undefined, false)\r\n        final.color = result[idx].color\r\n        result[idx] = final\r\n        props.setData(result);\r\n        props.setRemovedClasses(removed)\r\n        props.setExcludeInstructors(exclude)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: props.instructorDisplay}}>\r\n            <Card className=\"overflow-auto shadow-sm\" style={{ maxHeight: props.sideInfoHeight }}>\r\n                <Dropdown className=\"text-right\">\r\n                    <Dropdown.Toggle size=\"sm\" className=\"sidelist-sort-btn\">\r\n                        Sort\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item value=\"amount\" onClick={handleSortAmount}>Amount</Dropdown.Item>\r\n                        <Dropdown.Item value=\"name\" onClick={handleSortName}>Name</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                <Card.Body className=\"px-0 pt-1\">\r\n                    <h5 className=\"card-title mb-1\">Instructors</h5>\r\n                    {instructors.map((x, idx) => (\r\n                        <div key={idx}>\r\n                            {x.map(j => (\r\n                                <ToggleButtonGroup key={`${j.name}${idx}`} type=\"checkbox\" className=\"\">\r\n                                    <ToggleButton className=\"sidelist-item px-1 mb-1\" value={1} onClick={e => e.target.blur()} onChange={e => modifyInstructor(e, idx, j.name)}>\r\n                                        {j.name} • {j.count}\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            ))}\r\n                            {/* Adds line divider between different query tabs*/}\r\n                            {idx < instructors.length - 1 &&\r\n                            <p className=\"p-0 m-0\">-----</p>\r\n                            }\r\n                        </div>\r\n                    ))}\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {Row, Col, FormCheck, Button} from \"react-bootstrap\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport InfoModal from './Modal'\r\nimport ClassSideList from \"./ClassSideList\";\r\nimport InstructorSideList from \"./InstructorSideList\";\r\n\r\nexport default function Data(props) {\r\n    const [data, setData] = useState(JSON.parse(JSON.stringify(props.data)))\r\n    const [instructorAmount, setInstructorAmount] = useState(data.map(x => Object.keys(x.instructors).length).reduce((a, b) => a + b))\r\n    const [classAmount, setClassAmount] = useState(data.map(x => x.count).reduce((a, b) => a + b))\r\n    const [instructorDisplay, setInstructorDisplay] = useState(\"none\"); //display none or inherit\r\n    const [classDisplay, setClassDisplay] = useState(\"none\"); //display none or inherit\r\n    const [sideInfoHeight, setSideInfoHeight] = useState(\"0px\"); // max height for the side cards that changes on window resize\r\n    const [chartSwitch, setChartSwitch] = useState(false); //true = numbers, false = percent\r\n    const labels =  ['A', 'B', 'C', 'D', 'F', 'P', 'NP'];\r\n    const [show, setShow] = useState(false); // Modal display\r\n    const [excludeInstructors, setExcludeInstructors] = useState(new Set()) // instructor name\r\n    const [excludeCourses, setExcludeCourses] = useState(new Set()) // course department and number\r\n    const [removedClasses, setRemovedClasses] = useState(new Set()) // removed course objects\r\n\r\n    // caps viewable side list\r\n    const MAX_INSTRUCTORS = 500\r\n    const MAX_CLASSES = 500\r\n\r\n    const handleModalClose = () => setShow(false);\r\n    const handleModalShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        let percent = dataForGraph(true);\r\n        setGraphDataPercent(percent);\r\n        setGraphDataPopulation(dataForGraph(false));\r\n        setChartData({labels:labels, datasets: percent})\r\n        // setInstructorAmount(data.map(x => Object.keys(x.instructors).length).reduce((a, b) => a + b))\r\n        // setClassAmount(data.map(x => x.count).reduce((a, b) => a + b))\r\n    }, [data])\r\n\r\n    /*\r\n      returns array of colors for use in chartjs\r\n      [\r\n        [Acolor, Bcolor, Ccolor, Dcolor, Fcolor, Pcolor, NPcolor],  //form 1(always blue n yellow)\r\n        [Acolor, Bcolor, Ccolor, Dcolor, Fcolor, Pcolor, NPcolor],  //form 2\r\n        [Acolor, Bcolor, Ccolor, Dcolor, Fcolor, Pcolor, NPcolor],  //form 3\r\n        [Acolor, Bcolor, Ccolor, Dcolor, Fcolor, Pcolor, NPcolor]   //form 4\r\n      ]\r\n    */\r\n    const getGraphColors = (numGraphs) => {\r\n        const NUMBARS = 7;\r\n        const OPACITY = 0.6\r\n\r\n        //im going straight to hell\r\n        let colors = props.HSL.map(([h, s, l]) => Array(...Array(NUMBARS)).map(() => `hsla(${h},${s}%,${l}%,${OPACITY})`))\r\n\r\n        if (numGraphs === 1) {\r\n            //change the first one to yellow for pnp\r\n            let [h, s, l] = [43, 100, 67];\r\n            colors[0][5] = `hsla(${h},${s}%,${l}%,${OPACITY})`;\r\n            colors[0][6] = `hsla(${h},${s}%,${l}%,${OPACITY})`;\r\n        }\r\n        return colors;\r\n    }\r\n\r\n    /*\r\n        Creates an array of objects with the grade data and colors\r\n        to put in the graph dataset in Data.js\r\n    */\r\n    const dataForGraph = (percent) => {\r\n        let dataset = [];\r\n        let colors = getGraphColors(Object.keys(data).length);\r\n        let count = 0;\r\n\r\n        for (let d of data) {\r\n            let dataPopulation = [d.a, d.b, d.c, d.d, d.f, d.p, d.np];\r\n            let sum = dataPopulation.reduce((a, b) => a + b);\r\n            let dataPercentage = dataPopulation.map(num => (100 * num / sum).toFixed(2));\r\n\r\n            dataset.push({\r\n                data: percent ? dataPercentage : dataPopulation,\r\n                backgroundColor: colors[count],\r\n                label: `${count}`\r\n            });\r\n            count++;\r\n        }\r\n\r\n        return dataset;\r\n    }\r\n\r\n    const [graphDataPercent, setGraphDataPercent] = useState(dataForGraph(true));\r\n    const [graphDataPopulation, setGraphDataPopulation] = useState(dataForGraph(false));\r\n    const [chartData, setChartData] = useState({labels:labels, datasets: graphDataPercent});\r\n\r\n    let options = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        legend: { display: false },\r\n        animation: { duration: 1000 },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function(tooltipItem) {\r\n                    return tooltipItem.yLabel;\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true\r\n                },\r\n                gridLines: {\r\n                    color: props.nightMode ? \"rgba(255, 255, 255, 0.2)\" : \"rgba(0, 0, 0, 0.2)\" //change later\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: chartSwitch?\"Students\":\"Percent\"\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                scaleLabel: {\r\n                    display: false,\r\n                    labelString: 'Grade'\r\n                },\r\n                gridLines: {\r\n                    color: props.nightMode ? \"rgba(255, 255, 255, 0.2)\" : \"rgba(0, 0, 0, 0.2)\" //change later\r\n                },\r\n            }]\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    useEffect(()=>updateChartOptions(), [chartSwitch])\r\n    useEffect(()=>updateChartOptions(), [props.nightMode])\r\n    useEffect(() => init(), []);\r\n    //when gradelistpercentage changes, set chart data to it\r\n\r\n    const init = () => {\r\n        //stuff to run at start\r\n        resizeSideLists();\r\n        window.addEventListener(\"resize\", resizeSideLists);\r\n    }\r\n\r\n    const resizeSideLists = () => {\r\n        let height = document.getElementById('graphDiv').offsetHeight + document.getElementById('topDiv').offsetHeight;\r\n        setSideInfoHeight(height.toString() + \"px\");\r\n    }\r\n\r\n    const displayInstructorList = (e) => {\r\n        e.preventDefault();\r\n        if (instructorDisplay === \"none\") {\r\n            setInstructorDisplay(\"inherit\");\r\n        } else {\r\n            setInstructorDisplay(\"none\");\r\n        }\r\n    }\r\n\r\n    const displayClassList = (e) => {\r\n        e.preventDefault();\r\n        if (classDisplay === \"none\") {\r\n            setClassDisplay(\"inherit\");\r\n        } else {\r\n            setClassDisplay(\"none\");\r\n        }\r\n    }\r\n\r\n    const updateChartOptions = () =>{\r\n        options = {\r\n            responsive: true,\r\n            maintainAspectRatio: true,\r\n            legend: { display: false },\r\n            animation: { duration: 1000 },\r\n            scales: {\r\n                yAxes: [{\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    },\r\n                    gridLines: {\r\n                        color: props.nightMode ?  \"rgba(255, 255, 255, 0.2)\" : \"rgba(0, 0, 0, 0.2)\" //change later\r\n                    },\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: chartSwitch?\"Students\":\"Percent\"\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: false,\r\n                        labelString: 'Grade'\r\n                    },\r\n                    gridLines: {\r\n                        color: props.nightMode ?  \"rgba(255, 255, 255, 0.2)\" : \"rgba(0, 0, 0, 0.2)\" //change later\r\n                    },\r\n                }]\r\n            }\r\n        }\r\n        setChartData({labels:labels, datasets: chartSwitch?graphDataPopulation:graphDataPercent});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"data-row\">\r\n                {/* Instructor Side List */}\r\n                <Col sm={2} className=\"justify-content-center text-center px-0\">\r\n                    {instructorAmount <= MAX_INSTRUCTORS &&\r\n                        <InstructorSideList\r\n                            instructorDisplay={instructorDisplay}\r\n                            sideInfoHeight={sideInfoHeight}\r\n                            data={data}\r\n                            setData={setData}\r\n                            queryParams={props.queryParams}\r\n                            removedClasses={removedClasses}\r\n                            setRemovedClasses={setRemovedClasses}\r\n                            exludeInstructors={excludeInstructors}\r\n                            setExcludeInstructors={setExcludeInstructors}\r\n                            exludeCourses={excludeCourses}\r\n                        />\r\n                    }\r\n                </Col>\r\n\r\n                {/*middle section */}\r\n                <Col sm={8}>\r\n                    {/* Links to expand Instructor and Classes Lists */}\r\n                    <Row className=\"justify-content-between d-flex mb-1 px-2\" id=\"topDiv\">\r\n                        <div className=\"align-self-center\">\r\n                            {instructorAmount <= MAX_INSTRUCTORS\r\n                                ? <Button variant='link' className=\"text-decoration-none shadow-none text-dark pl-0\" onClick={displayInstructorList} style={{ cursor: \"pointer\", userSelect: \"none\" }}><span style={{ fontFamily: \"Symbola\" }}>&#x2B9C;</span> <u>{instructorAmount} Instructors</u></Button>\r\n                                : <p className=\"text-decoration-none shadow-none text-dark m-0\">{instructorAmount} Instructors</p>\r\n                            }\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <h5 className=\"main-text-color\">{data.length === 1 ? data[0].quarter + ' ' + data[0].year : 'Multiple'}</h5>\r\n                        </div>\r\n                        <div className=\"text-right align-self-center\">\r\n                            {classAmount <= MAX_CLASSES\r\n                                ? <Button variant='link' className=\"text-decoration-none shadow-none text-dark pr-0\" onClick={displayClassList} style={{ cursor: \"pointer\", userSelect: \"none\" }}><u>{classAmount} Classes</u><span style={{ fontFamily: \"Symbola\" }}> &#x2B9E;</span></Button>\r\n                                : <p className=\"text-decoration-none shadow-none text-dark m-0\">{classAmount} Classes</p>\r\n                            }\r\n                        </div>\r\n                    </Row>\r\n\r\n                    {/* Graph */}\r\n                    <Row className=\"justify-content-center\" id=\"graphDiv\">\r\n                        <Col sm={12}>\r\n                            <Bar\r\n                                data={chartData}\r\n                                width={100}\r\n                                height={50}\r\n                                options={options}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* Buttons and GPA */}\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col sm={3}>\r\n                            {classAmount <= MAX_CLASSES &&\r\n                            <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleModalShow}>\r\n                                Details\r\n                            </Button>\r\n                            }\r\n                        </Col>\r\n                        <Col sm={6} className=\"text-center\">\r\n                            <p className=\"main-text-color\">GPA: {data.map(obj =>obj.averageGPA).join(\", \")}</p>\r\n                        </Col>\r\n                        <Col sm={3} className=\"text-right\">\r\n                            <FormCheck\r\n                                id=\"chartSwitch\"\r\n                                type=\"switch\"\r\n                                checked={chartSwitch}\r\n                                onChange={()=>setChartSwitch(!chartSwitch)}\r\n                                onClick={e => e.target.blur()}\r\n                                label=\"Numbers\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                {/* Class Side List*/}\r\n                <Col sm={2} className=\"justify-content-center text-center px-0\">\r\n                    {classAmount <= MAX_CLASSES &&\r\n                        <ClassSideList\r\n                            classDisplay={classDisplay}\r\n                            sideInfoHeight={sideInfoHeight}\r\n                            data={data}\r\n                            setData={setData}\r\n                            queryParams={props.queryParams}\r\n                            removedClasses={removedClasses}\r\n                            setRemovedClasses={setRemovedClasses}\r\n                            exludeCourses={excludeCourses}\r\n                            setExcludeCourses={setExcludeCourses}\r\n                            exludeInstructors={excludeInstructors}\r\n                        />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            {classAmount <= MAX_CLASSES &&\r\n                <InfoModal handleModalClose={handleModalClose} show={show} data={data} />\r\n            }\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport { Form, Row, Col, Container, Collapse, Button } from \"react-bootstrap\";\r\nimport SelectSearch, {fuzzySearch} from \"react-select-search\";\r\n\r\nconst dep = require(\"./departments\");\r\n\r\nconst quarters = [\r\n  { name: \"Fall\", value: \"Fall\" },\r\n  { name: \"Winter\", value: \"Winter\" },\r\n  { name: \"Spring\", value: \"Spring\" },\r\n  { name: \"Summer\", value: \"Summer\" },\r\n];\r\n\r\nconst years = [\r\n  { name: \"2020-2021\", value: \"2020-21\" },\r\n  { name: \"2019-2020\", value: \"2019-20\" },\r\n  { name: \"2018-2019\", value: \"2018-19\" },\r\n  { name: \"2017-2018\", value: \"2017-18\" },\r\n  { name: \"2016-2017\", value: \"2016-17\" },\r\n  { name: \"2015-2016\", value: \"2015-16\" },\r\n  { name: \"2014-2015\", value: \"2014-15\" },\r\n];\r\n\r\nconst departments = dep.departments;\r\n\r\nexport default function SearchForm({ formID, instructors, handleFormValueChange, state }) {\r\n\r\n  const handleValueChange = (e) => {\r\n    handleFormValueChange({ formID: formID, name: e.name, value: e.value })\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center search-form-row\">\r\n        <Col className=\"col-12 col-sm-12 col-md-5\">\r\n          <SelectSearch\r\n            options={instructors}\r\n            filterOptions={(options) => {\r\n                const filter = fuzzySearch(options);\r\n                return (q) => filter(q).slice(0, 5);\r\n            }}\r\n            search\r\n            name=\"instructors\"\r\n            onChange={(val) =>\r\n              handleValueChange({\r\n                name: \"instructor\",\r\n                value: val\r\n              })\r\n            }\r\n            placeholder=\"Instructor Name\"\r\n          />\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-12 col-md-3\">\r\n          <SelectSearch\r\n            closeOnSelect={false}\r\n            printOptions=\"on-focus\"\r\n            multiple\r\n            name=\"quarters\"\r\n            onChange={(val) =>\r\n              handleValueChange({\r\n                name: \"quarters\",\r\n                value: val\r\n              })\r\n            }\r\n            placeholder=\"Quarters\"\r\n            options={quarters}\r\n          />\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-12 col-md-3\">\r\n          <SelectSearch\r\n            closeOnSelect={false}\r\n            printOptions=\"on-focus\"\r\n            name=\"years\"\r\n            onChange={(val) =>\r\n              handleValueChange({\r\n                name: \"years\",\r\n                value: val\r\n              })\r\n            }\r\n            multiple\r\n            placeholder=\"Years\"\r\n            options={years}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center search-form-row\">\r\n        <Col className=\"col-12 col-sm-12 col-md-5\">\r\n          <SelectSearch\r\n            options={departments}\r\n            search\r\n            filterOptions={fuzzySearch}\r\n            name=\"department\"\r\n            onChange={(val) =>\r\n              handleValueChange({\r\n                name: \"department\",\r\n                value: val\r\n              })\r\n            }\r\n            placeholder=\"All Departments\"\r\n          />\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-12 col-md-3\">\r\n          <Form.Control\r\n            onChange={(val) =>\r\n              handleValueChange({\r\n                name: \"classNumber\",\r\n                value: val.target.value\r\n              })\r\n            }\r\n            className=\"search-text-box\"\r\n            type=\"text\"\r\n            placeholder=\"Class Number (Ex. 45C)\"\r\n          />\r\n        </Col>\r\n        <Col className=\"col-12 col-sm-12 col-md-3\">\r\n          <Form.Control\r\n            onChange={(val) =>\r\n              handleValueChange({\r\n                name: \"classCode\",\r\n                value: val.target.value\r\n              })\r\n            }\r\n            className=\"search-text-box\"\r\n            type=\"text\"\r\n            placeholder=\"Class Code (Ex. 34060)\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center search-form-row\">\r\n        <Col className=\"col-12\">\r\n          <div className=\"advanced-options-wrapper\">\r\n            <Button variant=\"link\"\r\n              id=\"advanced-options-link\"\r\n              onClick={() =>\r\n                handleValueChange({ name: \"advancedVisible\", value: !state.advancedVisible })\r\n              }\r\n              aria-controls=\"example-collapse-text\"\r\n              aria-expanded={state.advancedVisible}\r\n            >\r\n              Advanced Options ▼\r\n              </Button>\r\n            <Collapse in={state.advancedVisible}>\r\n              <div className=\"advanced-options\">\r\n\r\n                <Row className=\"justify-content-center text-center\">\r\n                  <Col>\r\n                    <Form.Check\r\n                      checked={state.excludePNP}\r\n                      onChange={(evt) => {\r\n                        handleValueChange({ name: \"excludePNP\", value: evt.target.checked })\r\n                      }}\r\n                      type=\"checkbox\"\r\n                      id={`exclude-pnp`}\r\n                      label={`Exclude P/NP`}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Check\r\n                      checked={state.covid19}\r\n                      onChange={(evt) => {\r\n                        handleValueChange({ name: \"covid19\", value: evt.target.checked })\r\n                      }}\r\n                      type=\"checkbox\"\r\n                      id={`exclude-covid-19`}\r\n                      label={`Exclude COVID-19`}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Check\r\n                      checked={state.lowerDiv}\r\n                      onChange={(evt) => {\r\n                        handleValueChange({ name: \"lowerDiv\", value: evt.target.checked })\r\n                      }}\r\n                      type=\"checkbox\"\r\n                      id={`lower-div-only`}\r\n                      label={`LowerDiv Only`}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Check\r\n                      checked={state.upperDiv}\r\n                      onChange={(evt) => {\r\n                        handleValueChange({ name: \"upperDiv\", value: evt.target.checked })\r\n                      }}\r\n                      type=\"checkbox\"\r\n                      id={`upper-div-only`}\r\n                      label={`UpperDiv Only`}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default function FormTab({color, handleSetForm, handleCloseForm, title, showClose, isSelected}){\r\n    return (\r\n        <div\r\n            style={{\r\n                borderBottomColor: color,\r\n                backgroundColor:isSelected?\r\n                        \"hsla(\" + color.slice(4, -1) + \", 25%)\"\r\n                        : \"transparent\",\r\n            }}\r\n            className={\"form-tab \" + (isSelected?\"selected-form-tab\":\"\")}\r\n            onClick={() => handleSetForm()}>\r\n            <div\r\n                className=\"close-button\"\r\n                style={showClose?null:{ display: \"none\" }}\r\n                onClick={() => handleCloseForm()}>\r\n                <a href=\"#\">✕</a>\r\n            </div>\r\n            <h5 className=\"form-tab-header\">\r\n                {title}\r\n            </h5>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FormTab from './FormTab';\r\nimport {AiOutlinePlus} from 'react-icons/ai'\r\nexport default function FormTabs({ currentForm, forms, setCurrentForm, removeForm, addForm }) {\r\n    \r\n    return <>\r\n        <Row className=\"justify-content-center\">\r\n        {Object.keys(forms).map((formID) =>\r\n            <Col md={3} key={formID} className=\"text-center\">\r\n                    <FormTab\r\n                        formID={formID}\r\n                        color={forms[formID].color}\r\n                        handleSetForm={() => setCurrentForm(formID)}\r\n                        handleCloseForm={() => removeForm(formID)}\r\n                        showClose={Object.keys(forms).length > 1}\r\n                        isSelected={formID === currentForm}\r\n                        title={forms[formID].instructor !== \"\" ? forms[formID].instructor : \"New Form \"} />\r\n            </Col>)}\r\n            {Object.keys(forms).length <= 3? \r\n                    <Col m=\"auto\">\r\n                    <div className=\"add-form-button\" onClick={addForm}>\r\n                        <AiOutlinePlus />\r\n                    </div>\r\n                    </Col>\r\n                :null}\r\n                </Row>\r\n    </>\r\n\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport \"./searchform.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Data from \"../Data/Data\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport FormTabs from \"./FormTabs\"\r\nimport {useLocation} from 'react-router-dom';\r\nconst calc = require('./calculations');\r\n\r\n//const OPACITY = 0.6\r\nconst HSL = [[204, 82, 57], //blue\r\n    [130, 84, 73], //green\r\n    [8, 100, 67], //orange\r\n    [344, 68, 80]] //pink\r\n\r\nconst API_URL = 'https://api.peterportal.org/graphql'\r\nconst GRAPHQL_INSTRUCTOR_QUERY = `\r\n    query {\r\n      grades {\r\n        instructors\r\n      }\r\n    }\r\n`\r\n\r\n\r\nconst INITIAL_INSTRUCTORS = [\r\n    { name: \"SHEPHERD, B.\", value: \"SHEPHERD, B.\" },\r\n    { name: \"LEVIN, K.\", value: \"LEVIN, K.\" },\r\n    { name: \"SEONG, A.\", value: \"SEONG, A.\" },\r\n    { name: \"SPENCER, P.\", value: \"SPENCER, P.\" },\r\n    { name: \"WOLFF, B.\", value: \"WOLFF, B.\" }];\r\n\r\n/*\r\n  Handles all the searchforms, and keeps track of state of each form\r\n  Also handles fetching instructors list, fetching results, and setting page to data\r\n*/\r\nexport default function Search({ nightMode }) {\r\n    const [instructors, setInstructors] = useState(INITIAL_INSTRUCTORS);\r\n\r\n    const [currentForm, setCurrentForm] = useState(1);\r\n    const [lastFormID, setLastFormID] = useState(0);\r\n    const [results, setResults] = useState([]);\r\n    // const [resultsPercent, setResultsPercent] = useState([]);\r\n    // const [resultsPopulation, setResultsPopulation] = useState([]);\r\n    const [queryParams, setQueryParams] = useState();\r\n    const [showFormTabs, setShowFormTabs] = useState(false) // only show after first search\r\n    let query = new URLSearchParams(useLocation().search);\r\n\r\n    const EMPTY_STATE = {\r\n        formID: 1, //make sure to change this when using this\r\n        color: `hsl(${HSL[0][0]}, ${HSL[0][1]}%, ${HSL[0][2]}%)`,\r\n        instructor: query.get(\"instructor\") || \"\",\r\n        quarters: query.get(\"quarters\")?query.get(\"quarters\").split(\",\"):[],\r\n        years: query.get(\"years\")?query.get(\"years\").split(\",\"):[],\r\n        department: query.get(\"department\") || \"\",\r\n        classNumber: query.get(\"classNumber\") || \"\",\r\n        classCode: query.get(\"classCode\") || \"\",\r\n        advancedVisible: query.get(\"advancedVisible\") || false,\r\n        excludePNP: query.get(\"exludePNP\") || false,\r\n        covid19: query.get(\"covid19\") || false,\r\n        lowerDiv: query.get(\"lowerDiv\") || false,\r\n        upperDiv: query.get(\"upperDiv\") || false\r\n    }\r\n    const [forms, setForms] = useState({\r\n        1: EMPTY_STATE\r\n    }); // {formID: formState}\r\n\r\n    //on component mount, fetch instructors and add a form\r\n    useEffect(() => fetchInstructors(), []);\r\n    //check currentform in forms and update lastformid on change of forms{}\r\n    useEffect(() => updateFormNumbers(), [forms]);\r\n\r\n    // useEffect(()=> {\r\n    //     setResultsPercent(dataForGraph(results, true));\r\n    //     setResultsPopulation(dataForGraph(results, false));\r\n    // }, [results])\r\n\r\n\r\n    /*\r\n      checks if currentForm is in forms{}\r\n      if not, set currentforms to last formID\r\n      also updates lastFormID\r\n      called on every change of forms\r\n    */\r\n    const updateFormNumbers = () => {\r\n        if (!(currentForm in forms)) {\r\n            const formIDs = Object.keys(forms);\r\n            const id = formIDs[formIDs.length - 1];\r\n            setCurrentForm(id);\r\n            console.log(\"updating currentformid to \" + id);\r\n        }\r\n        setLastFormID(lastFormID + 1)\r\n        return null;\r\n    }\r\n    /*\r\n      called by SearchForm component with currentFormID\r\n    */\r\n    const handleFormValueChange = ({ formID, name, value }) => {\r\n        if (!(formID in forms)) {\r\n            console.log(\"Form \" + formID + \" not found in forms\");\r\n            console.log(Object.keys(forms));\r\n            return;\r\n        }\r\n        let formState = forms[formID];\r\n        formState[name] = value;\r\n        setForms({ ...forms, [formID]: formState });\r\n    }\r\n\r\n    /*\r\n      Adds a new form and formstate\r\n    */\r\n    const addForm = () => {\r\n        let newFormID = lastFormID + 1;\r\n        const i = Object.keys(forms).length //index in HSL array\r\n        let newState = {\r\n            formID: newFormID, //make sure to change this when using this\r\n            color: `hsl(${HSL[i][0]}, ${HSL[i][1]}%, ${HSL[i][2]}%)`,\r\n            instructor: \"\",\r\n            quarters: [],\r\n            years: [],\r\n            department: \"\",\r\n            classNumber: \"\",\r\n            classCode: \"\",\r\n            advancedVisible: false,\r\n            excludePNP: false,\r\n            covid19: false,\r\n            lowerDiv: false,\r\n            upperDiv: false\r\n        }\r\n        var newForms = Object.assign({ [newFormID]: newState }, forms);\r\n        setForms(newForms);\r\n        setCurrentForm(newFormID);\r\n    }\r\n\r\n    /*\r\n      Removes form with given formID\r\n    */\r\n    const removeForm = (formID) => {\r\n        //copy forms\r\n        var newForms = Object.assign({}, forms);\r\n        delete newForms[formID];\r\n\r\n        //reassign colors\r\n        newForms = reassignColors(newForms);\r\n\r\n        setCurrentForm(Object.keys(newForms).length - 1);\r\n        setForms(newForms);\r\n        updateFormNumbers();\r\n\r\n    }\r\n\r\n    const reassignColors = (formStates) => {\r\n        let i = 0;\r\n        for (let f in formStates) {\r\n            formStates[f].color = `hsl(${HSL[i][0]}, ${HSL[i][1]}%, ${HSL[i][2]}%)`\r\n            i++;\r\n        }\r\n        return formStates;\r\n    }\r\n\r\n    const fetchInstructors = async () => {\r\n        fetch(API_URL, {\r\n            body: JSON.stringify({'query': GRAPHQL_INSTRUCTOR_QUERY}),\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }})\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setInstructors(\r\n                    res.data.grades.instructors.map((teacher) => ({\r\n                        name: teacher,\r\n                        value: teacher,\r\n                    })))\r\n            }).then(addForm());\r\n    }\r\n\r\n    /*\r\n    fetches results for one particular form as JSON\r\n    */\r\n    const fetchDataFromForm = async (formID) => {\r\n        return fetch(API_URL, {\r\n            body: JSON.stringify({\"query\": calc.searchQuery(forms[formID])}),\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': 'Zotistics-48e7d5db47d3bf0ebfef45fe0aea7b3df77d0c77b243ee4bc9b780df6c9dd91f'\r\n            }})\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                let params = forms[formID];\r\n                let filtered = calc.filter(data.data.grades.grade_distributions, params.excludePNP, params.covid19, params.lowerDiv, params.upperDiv);\r\n                let classList = filtered.reverse() // reversed to order it from most recent to oldest\r\n                let result = calc.calculateData(classList, params, data)\r\n                setQueryParams(params);\r\n                setShowFormTabs(true);\r\n\r\n                return Object.assign({ color: forms[formID].color }, result);\r\n            });\r\n    }\r\n\r\n    /*\r\n    Runs when submit button is clicked\r\n    For each formID in formStates, fetches from /search\r\n    and adds to results a new key/value pair where\r\n    key=formID and value=allTheDataForThatForm\r\n    */\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setResults([]);\r\n        console.log(\"form submitted\");\r\n        const getResultData = async () => {\r\n            return Promise.all(\r\n                Object.keys(forms).map(async (formID) => {\r\n                    return await fetchDataFromForm(formID);\r\n                })\r\n            );\r\n        };\r\n        getResultData().then((res) => {\r\n            setResults(res);\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"search-content-wrapper\">\r\n            <Container>\r\n                <Form onSubmit={handleFormSubmit}>\r\n                    <Row>\r\n                        {currentForm in forms ?\r\n                            <SearchForm\r\n                                formID={currentForm}\r\n                                instructors={instructors}\r\n                                handleFormValueChange={handleFormValueChange}\r\n                                state={forms[currentForm]}\r\n                            /> : null}\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center search-form-row\" noGutters>\r\n                        <Col className=\"text-center\">\r\n                            <Form.Group >\r\n                                <Button\r\n                                    className=\"submit-button\"\r\n                                    as=\"input\"\r\n                                    type=\"submit\"\r\n                                    name=\"submit\"\r\n                                    value=\"Submit\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    {showFormTabs &&\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col sm={2} />\r\n                        <Col sm={8}>\r\n                            {lastFormID > 0 &&\r\n                            <FormTabs\r\n                                currentForm={currentForm}\r\n                                forms={forms}\r\n                                setCurrentForm={setCurrentForm}\r\n                                removeForm={removeForm}\r\n                                addForm={addForm}\r\n                            />\r\n                            }\r\n                        </Col>\r\n                        <Col sm={2} />\r\n                    </Row>\r\n                    }\r\n                </Form>\r\n\r\n                {results.length !== 0 &&\r\n                <Data\r\n                    data={results}\r\n                    nightMode={nightMode}\r\n                    setResults={setResults}\r\n                    queryParams={queryParams}\r\n                    HSL={HSL}\r\n                />\r\n                }\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\n\r\nexport default function Info({updateColors}) {\r\n    useEffect(()=>updateColors(), []);\r\n    return (\r\n        <div className=\"container main-text-color\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-sm-11\">\r\n                    <h4>How To Use</h4>\r\n                    <hr />\r\n                    <p className=\"secondary-text-color\">Fill in the input fields with what you would like to search for. You do not need to complete all\r\n                the fields, but the more options you select, the more narrow the search results will be.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-sm-11\">\r\n                    <h4>FAQ</h4>\r\n                    <hr />\r\n                    <b>Who has the most clout?</b>\r\n                    <p className=\"secondary-text-color\">Mr. Zotistics</p>\r\n\r\n                    <b>How far does the data go back to?</b>\r\n                    <p className=\"secondary-text-color\">Summer 2014</p>\r\n\r\n                    <b>How often will grades be added and updated?</b>\r\n                    <p className=\"secondary-text-color\">New grades will be added once the data is available after the quarter is over, which can take a few weeks.</p>\r\n\r\n                    <b>Why are the +/- grades not shown?</b>\r\n                    <p className=\"secondary-text-color\">That's how the data was given to me.</p>\r\n\r\n                    <b>What does <u>Exclude P/NP</u> do?</b>\r\n                    <p className=\"secondary-text-color\">It excludes classes that grade in only Pass/No Pass from the search result.</p>\r\n\r\n                    <b>What does <u>Exclude COVID-19</u> do?</b>\r\n                    <p className=\"secondary-text-color\">It excludes Winter 2020 and Spring 2020 from the search result.</p>\r\n\r\n                    <b>How did you get the data?</b>\r\n                    <p className=\"secondary-text-color\">I made a <a href=\"https://en.wikipedia.org/wiki/California_Public_Records_Act\">California Public\r\n                Records Act</a> request to <a href=\"http://www.pro.uci.edu\">UCI's Public Records Office</a>.</p>\r\n\r\n                    <b>Why can't I find a certain class?</b>\r\n                    <p className=\"secondary-text-color\">UCI might be withholding that class's data, or the instructor may have submitted grades late so the\r\n                    data wasn't collected. It could also just be a bug; if you think this is the case, submit a bug report\r\n                <a href=\"https://forms.gle/eoWtS26Ys8ra4cjK8\">here.</a></p>\r\n\r\n                    <b>I <i>really</i> want to know the missing class grade distribution, is there anything you can do?</b>\r\n                    <p className=\"secondary-text-color\">Submit a request <a href=\"https://forms.gle/eoWtS26Ys8ra4cjK8\">here,</a> and I may be able to pull\r\n                some strings and add it to the database.</p>\r\n\r\n                    <b>Why can't I find a certain instructor?</b>\r\n                    <p className=\"mb-0\">There are 3 possible reasons:</p>\r\n                    <ol>\r\n                        <li>If they are a professor/lecturer, it may be for the same reasons as <i>\"Why can't I find a certain class?\"</i> above.</li>\r\n                        <li>If they are a TA, they may not be listed in the database, or the professor is listed instead of the TA.</li>\r\n                        <li>If the class has multiple instructors, only one teacher may have been mentioned in the database.</li>\r\n                    </ol>\r\n\r\n                    <b>Is the data perfect?</b>\r\n                    <p className=\"secondary-text-color\">Almost. The database I received from UCI is contained in a badly formatted Excel file. Although I\r\n                    did my best to fix a lot of the issues, there were some things that could not be fixed, and I had\r\n                    to make some decisions to salvage parts of the database. For example, the instructor listed in the\r\n                    database sometimes differed from the instructor listed for the same class on WebSoc. To solve this\r\n                    issue, I decided to use the names listed in the database, as there are too many uncertainties that\r\n                    go with using the name listed on WebSoc.</p>\r\n\r\n                    <b>I can view the Writing TAs. Why not others?</b>\r\n                    <p className=\"secondary-text-color\">I made an exception for the writing classes to use the instructor listed on WebSoc because it's\r\n                    standard for TAs to be teaching most of these writing classes.</p>\r\n\r\n                    <b>Why is it called Zotistics?</b>\r\n                    <p className=\"secondary-text-color\">Zot + Statistics</p>\r\n\r\n                    <b>Why are there dogs on the homepage?</b>\r\n                    <p className=\"secondary-text-color\">I like dogs.</p>\r\n\r\n                    <b>I love this website so much! Can I donate?</b>\r\n                    <p className=\"secondary-text-color\">Yes! You can donate <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=E5G2Z2F2FCXYL&source=url\">here</a>.\r\n                I accept Discord Nitro as well if you can find me on there :waveboy:</p>\r\n\r\n                    <h5>Upcoming Features:</h5>\r\n                    <ul className=\"mb-1\">\r\n                        <li>Dark Theme</li>\r\n                        <li>Search by distribution</li>\r\n                    </ul>\r\n                    <p className=\"secondary-text-color\"><i>Release Date: Soon<sup>TM</sup></i></p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-sm-11\">\r\n                    <h4>Changelog</h4>\r\n                    <hr />\r\n\r\n                    <b>October 13, 2020</b>\r\n                    <ul>\r\n                        <li>Updated Info page</li>\r\n                    </ul>\r\n\r\n                    <b>August 31, 2020</b>\r\n                    <ul>\r\n                        <li>Updated Info page</li>\r\n                        <li>Performance update</li>\r\n                    </ul>\r\n\r\n                    <b>August 13, 2020</b>\r\n                    <ul>\r\n                        <li>Added Info page</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from 'react'\r\nimport './App.css';\r\nimport Dog from './Components/Dog/Dog'\r\nimport NavBar from './Components/NavBar/NavBar'\r\nimport Search from \"./Components/Search/Search\";\r\nimport Info from \"./Components/Info/Info\"\r\nimport {BrowserRouter as Router, \r\n        Switch, \r\n        Route} from 'react-router-dom';\r\n\r\n\r\nexport default function App() {\r\n    const [nightMode, setNightMode] = useState(false);\r\n\r\n    useEffect(()=>updateColors(), [nightMode]);\r\n\r\n    const updateColors = ()=> {\r\n        //switches some colors around\r\n        console.log(\"updating colors\");\r\n        let root = document.body;\r\n        if(nightMode){\r\n            root.style.setProperty('--main-bg-color', '#111111');\r\n            root.style.setProperty('--main-text-color', 'hsl(210, 17%, 98%)');\r\n            root.style.setProperty('--secondary-bg-color', '#424242');\r\n            root.style.setProperty('--secondary-text-color', '#8e8e8e');\r\n        }else{\r\n            root.style.setProperty('--main-bg-color', '#fff');\r\n            root.style.setProperty('--main-text-color', '#111111');\r\n            root.style.setProperty('--secondary-bg-color', '#f5f6f7');\r\n            root.style.setProperty('--secondary-text-color', '#424242');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route path=\"/info\">\r\n                        <Info updateColors={updateColors}/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Search nightMode={nightMode}/>\r\n                        <Dog nightMode={nightMode} setNightMode={setNightMode}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n","\r\n/*\r\n  Returns object of classes and their occurrences to use\r\n  in the side bar of the results page next to the graph\r\n */\r\nexport function classList(data){\r\n    let classes = {}; // { className: {count, {year, quarter, code, instructor}} }\r\n\r\n    for(let classObject of data){\r\n        let c = classObject.course_offering;\r\n        let className = `${c.course.department} ${c.course.number}`;\r\n        let course = {year: c.year, quarter: c.quarter, code: c.section.code, instructor: c.instructors[0].shortened_name};\r\n\r\n        if(className in classes){\r\n            classes[className].count++;\r\n            classes[className].courses.push(course);\r\n        } else {\r\n            classes[className] = {count: 1, courses: [course]};\r\n            classes[className].department = c.course.department\r\n            classes[className].number = c.course.number\r\n        }\r\n    }\r\n\r\n    // turns classes object into an array of objects\r\n    return Object.entries(classes).map(([key, value]) => ({\r\n        name: key, count: value.count, courses: value.courses, department: value.department, number: value.number\r\n    }))\r\n}\r\n\r\n/*\r\n  Returns object of instructors and their occurrences to use\r\n  in the side bar of the results page next to the graph\r\n */\r\nexport function instructorList(data){\r\n    let instructors = {};\r\n\r\n    for(let classObject of data){\r\n        let teacher = classObject.course_offering.instructors[0].shortened_name\r\n        if(teacher in instructors){\r\n            instructors[teacher]++;\r\n        } else {\r\n            instructors[teacher] = 1;\r\n        }\r\n    }\r\n\r\n    return Object.entries(instructors).map(([key, value]) => ({\r\n        name: key, count: value\r\n    }))\r\n}\r\n\r\n/*\r\n  Returns exact year from a quarter and year combo\r\n  Winter 2017-18 => Winter 2018\r\n */\r\nexport function exactYear(quarter, year){\r\n    let yearSplit = year.split('-');\r\n    let quarterUpper = quarter.toUpperCase()\r\n    let exactYear;\r\n    if(quarterUpper === 'SUMMER' || quarterUpper === 'FALL'){\r\n        exactYear = yearSplit[0]\r\n    } else if(quarterUpper === 'WINTER' || quarterUpper === 'SPRING'){\r\n        exactYear = yearSplit[0][0] + yearSplit[0][1] + yearSplit[1]\r\n    }\r\n\r\n    return exactYear\r\n}\r\n\r\n/*\r\n  Returns exact quarter and year from the search query\r\n  Winter 2017-18 => Winter 2018\r\n */\r\nexport function quarterYear(quarters, years){\r\n    if(quarters.length === 1 && years.length === 1){\r\n        return {quarter: quarters[0], year: exactYear(quarters[0], years[0])}\r\n    } else if(quarters.length === 1 && years.length === 0){\r\n        return {quarter: quarters[0], year: ''}\r\n    } else if(quarters.length === 0 && years.length === 1){\r\n        return {quarter: '', year: years[0]}\r\n    } else if(quarters.length === 0 && years.length === 0){\r\n        return {quarter: 'All', year: ''}\r\n    } else {\r\n        return {quarter: 'Custom', year: ''}\r\n    }\r\n}\r\n\r\n/*\r\n  Adds additional data for each course in the api result\r\n */\r\nexport function addData(data){\r\n    for(let i = 0; i < data.length; i++){\r\n        let quarter = data[i].course_offering.quarter.toUpperCase();\r\n        let year = data[i].course_offering.year;\r\n        data[i].course_offering.exact_year = exactYear(quarter, year);\r\n        data[i].course_offering.quarter = data[i].course_offering.quarter.charAt(0).toUpperCase() +\r\n            data[i].course_offering.quarter.slice(1).toLowerCase(); // all caps to first letter upper case and rest lower case\r\n    }\r\n}\r\n\r\n/*\r\n  Sums up the amount of grades in the query and averages the gpa\r\n */\r\nexport function cumulativeData(original_data, data, params, option = true){\r\n    let stats = {a: 0, b: 0, c: 0, d: 0, f: 0, p: 0, np: 0, gpa: 0}\r\n\r\n    if(option && !params.excludePNP && !params.covid19 && !params.lowerDiv && !params.upperDiv){ // no advanced options\r\n        let agg = original_data.data.grades.aggregate\r\n        stats.a = agg.sum_grade_a_count;\r\n        stats.b = agg.sum_grade_b_count;\r\n        stats.c = agg.sum_grade_c_count;\r\n        stats.d = agg.sum_grade_d_count;\r\n        stats.f = agg.sum_grade_f_count;\r\n        stats.p = agg.sum_grade_p_count;\r\n        stats.np = agg.sum_grade_np_count;\r\n        stats.gpa = agg.average_gpa.toFixed(2);\r\n        // let avg_manual = ((stats.a * 4) + (stats.b * 3) + (stats.c * 2) + (stats.d))/(stats.a + stats.b + stats.c + stats.d + stats.f)\r\n        // console.log('manual:', avg_manual)\r\n        // console.log('from api:', agg.average_gpa)\r\n\r\n    } else { // if at least one advanced option is true\r\n        for(let classObject of data){\r\n            stats.a += classObject.grade_a_count;\r\n            stats.b += classObject.grade_b_count;\r\n            stats.c += classObject.grade_c_count;\r\n            stats.d += classObject.grade_d_count;\r\n            stats.f += classObject.grade_f_count;\r\n            stats.p += classObject.grade_p_count;\r\n            stats.np += classObject.grade_np_count;\r\n            stats.gpa += classObject.average_gpa;\r\n        }\r\n        stats.gpa = (stats.gpa / data.length).toFixed(2)\r\n    }\r\n\r\n    return stats;\r\n}\r\n\r\n/*\r\n  Filters the api result based on the advanced options in the query\r\n */\r\nexport function filter(data, excludePNP, covid19, lowerDiv, upperDiv){\r\n    let final = [];\r\n\r\n    for(let c of data){\r\n        let push = true;\r\n        let co = c.course_offering;\r\n\r\n        if(lowerDiv === true && upperDiv === false){\r\n            let num = parseInt(co.course.number.replace(/\\D/g, \"\"));\r\n            if(num >= 100){\r\n                push = false;\r\n            }\r\n        }\r\n        if(upperDiv === true && lowerDiv === false){\r\n            let num = parseInt(co.course.number.replace(/\\D/g, \"\"));\r\n            if(num < 100){\r\n                push = false;\r\n            }\r\n        }\r\n        if(covid19 === true){\r\n            if((co.year === '2019-20' && co.quarter.toUpperCase() === 'WINTER') ||\r\n                (co.year === '2019-20' && co.quarter.toUpperCase() === 'SPRING') ||\r\n                (co.year === '2020-21' && co.quarter.toUpperCase() === 'SUMMER') ||\r\n                (co.year === '2020-21' && co.quarter.toUpperCase() === 'FALL') ||\r\n                (co.year === '2020-21' && co.quarter.toUpperCase() === 'WINTER')){\r\n                push = false;\r\n            }\r\n        }\r\n        if(excludePNP){\r\n            if(c.grade_a_count === 0 && c.grade_b_count === 0 && c.grade_c_count === 0 && c.grade_d_count === 0 && c.grade_f_count === 0){\r\n                push = false\r\n            }\r\n        }\r\n\r\n        if(push === true){\r\n            final.push(c);\r\n        }\r\n    }\r\n\r\n    return final\r\n}\r\n\r\n/*\r\n    Combines all calculations into one function\r\n */\r\nexport function calculateData(data, params, originalData, option) {\r\n    addData(data);\r\n    let count = data.length; // total amount of classes in query\r\n    let stats = cumulativeData(originalData, data, params, option); // object that has grade data\r\n    let classes = classList(data);\r\n    let instructors = instructorList(data);\r\n    let displayTerm = quarterYear(params.quarters, params.years); // used to display term in results page above graph\r\n\r\n    return {count: count, a: stats.a, b: stats.b, c: stats.c, d: stats.d, f: stats.f, p: stats.p, np: stats.np,\r\n        averageGPA: stats.gpa, classes: classes, instructors: instructors,\r\n        instructor: params.instructor, quarter: displayTerm.quarter, year: displayTerm.year,\r\n        department: params.department, classNumber: params.classNumber,\r\n        classCode: params.classCode, courseList: data\r\n    };\r\n}\r\n\r\nexport function searchQuery(params){\r\n    let quarters = params.quarters.join(';');\r\n    let years = params.years.join(';');\r\n    let code = (params.classCode !== '') ? parseFloat(params.classCode) : null;\r\n    let args = `instructor: \"${params.instructor}\", quarter: \"${quarters}\", year: \"${years}\", department: \"${params.department}\",\r\n        number: \"${params.classNumber}\", code: ${code}`;\r\n\r\n    return `\r\n        query {\r\n          grades(${args}) {\r\n            aggregate{\r\n              sum_grade_a_count\r\n              sum_grade_b_count\r\n              sum_grade_c_count\r\n              sum_grade_d_count\r\n              sum_grade_f_count\r\n              sum_grade_p_count\r\n              sum_grade_np_count\r\n              average_gpa\r\n            }\r\n            grade_distributions{\r\n              grade_a_count\r\n              grade_b_count\r\n              grade_c_count\r\n              grade_d_count\r\n              grade_f_count\r\n              grade_p_count\r\n              grade_np_count\r\n              average_gpa\r\n              course_offering{\r\n                year\r\n                quarter\r\n                instructors{\r\n                  name\r\n                  shortened_name\r\n                }\r\n                section{\r\n                  code\r\n                }\r\n                course {\r\n                  department\r\n                  number\r\n                  title\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        `\r\n}"],"sourceRoot":""}